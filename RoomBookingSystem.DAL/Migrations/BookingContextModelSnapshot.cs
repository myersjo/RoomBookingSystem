// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RoomBookingSystem.DAL.Context;
using System;

namespace RoomBookingSystem.DAL.Migrations
{
    [DbContext(typeof(BookingContext))]
    partial class BookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Booking", b =>
                {
                    b.Property<int>("BookingReference")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BookingCreated");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("RoomId");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("UserId");

                    b.HasKey("BookingReference");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ClosingTime");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OpeningTime");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Room", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<int>("LocationId");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("LocationId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.RoomEquipment", b =>
                {
                    b.Property<string>("RoomId");

                    b.Property<int>("EquipmentId");

                    b.HasKey("RoomId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("RoomEquipment");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Booking", b =>
                {
                    b.HasOne("RoomBookingSystem.Business.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.Room", b =>
                {
                    b.HasOne("RoomBookingSystem.Business.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RoomBookingSystem.Business.Entities.RoomEquipment", b =>
                {
                    b.HasOne("RoomBookingSystem.Business.Entities.Equipment", "Equipment")
                        .WithMany("RoomEquipment")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomBookingSystem.Business.Entities.Room", "Room")
                        .WithMany("RoomEquipment")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
